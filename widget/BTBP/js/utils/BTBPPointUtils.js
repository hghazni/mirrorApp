(function(f){f.BTBPPointUtils={setPoint:function(a,b,c){c.x=a[2*b];c.y=a[2*b+1]},applyMovementVector:function(a,b,c,d){a.x=b.x+c.x*d;a.y=b.y+c.y*d},interpolatePoint:function(a,b,c,d){a.x=b.x+d*(c.x-b.x);a.y=b.y+d*(c.y-b.y)},getAveragePoint:function(a,b){a.x=0;for(var c=a.y=0,d=b.length;c<d;c++)a.x+=b[c].x,a.y+=b[c].y;a.x/=d;a.y/=d},calcMovementVector:function(a,b,c,d){a.x=d*(c.x-b.x);a.y=d*(c.y-b.y)},calcMovementVectorOrthogonalCW:function(a,b,c,d){f.BTBPPointUtils.calcMovementVector(a,b,c,d);b=a.x;
a.x=-a.y;a.y=b},calcMovementVectorOrthogonalCCW:function(a,b,c,d){f.BTBPPointUtils.calcMovementVector(a,b,c,d);b=a.x;a.x=a.y;a.y=-b},calcIntersectionPoint:function(a,b,c,d,e){var g=c.x-b.x;0==g&&(g=.01);var f=c.y-b.y;0==f&&(f=.01);b=e.x-d.x;0==b&&(b=.01);d=e.y-d.y;0==d&&(d=.01);g=f/g;c=c.y-g*c.x;b=d/b;e=e.y-b*e.x;b=g-b;0==b&&(b=.01);e-=c;0==e&&(e=.01);e/=b;a.x=e;a.y=g*e+c},calcDistance:function(a,b){return Math.sqrt((b.x-a.x)*(b.x-a.x)+(b.y-a.y)*(b.y-a.y))},calcAngle:function(a,b){return Math.atan2(b.y-
a.y,b.x-a.x)},toDegree:function(a){return 180*a/Math.PI},toRadian:function(a){return a*Math.PI/180}}})(btbpv4);
